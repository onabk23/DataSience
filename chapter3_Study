import re
import sys
from time import sleep
import os, tkinter, tkinter.filedialog, tkinter.messagebox
from tkinter import *
from datetime import date
import  csv
import pandas as pd
import openpyxl
import matplotlib.pyplot as plt
import matplotlib as mpl
import seaborn as sns
sns.set()
import datetime
import numpy as np
import numpy.random as random
from pandas import Series,DataFrame
import scipy as sp
import scipy.linalg as linalg
from scipy.optimize import minimize_scalar
from scipy.optimize import newton
import math
import requests, zipfile
from io import StringIO
import io
import urllib.request

#可視化ライブラリー
import matplotlib as mpl
import seaborn as sns


#proxyを通すために次の一文をいれておいてください。
proxy = urllib.request.ProxyHandler({'http': 'http//user:passward@proxy.kanto.sony.co.jp:10080'})
#opener = urllib.request.build_opener(proxy)
#urllib.request.install_opener(opener)
#urllib.request.urlretrieve = 'htts://archive.ics.uci.edu/ml/machine-learning-databases/00356/student.zip'

url = 'http://archive.ics.uci.edu/ml/machine-learning-databases/00356/student.zip'
r = requests.get(url, stream = True)
z = zipfile.ZipFile(io.BytesIO(r.content))
z.extractall()

#DELIMITERをsep = (';')で区切り文字をいれるところがみそです。
student_data_math = pd.read_csv('student-mat.csv' ,sep = (';'))
print(student_data_math.head()) #最初から5行目までをdumpしてみるこまんどです。
print(student_data_math.tail()) #最後から5行目までをdumpしてみるこまんどです。
#object かintか確認してみよう！
student_data_math.info()
print(student_data_math['sex'].head())
print(student_data_math['absences'].head())
print(student_data_math.groupby('sex')['age'].mean())
#ヒストグラムデータの指定　どんどんグラフを消すごとに次のもんだいが見えます。
plt.hist(student_data_math['absences'])
plt.xlabel('absences')
plt.ylabel('count')
#x軸、y軸のラベル
plt.grid(True)
#グリッドをつける。
plt.tight_layout()
plt.show()
# 分散
print(student_data_math['absences'].var())
print(student_data_math['absences'].std())
print(student_data_math['absences'].describe())
#四方位範囲
print(student_data_math['absences'].describe()[6] - student_data_math['absences'].describe()[4])
#全列を対象とした結果をもとめる。
print(student_data_math.describe())
#箱ひげ図
plt.boxplot(student_data_math['G1'])
plt.grid(True)
plt.show()
plt.boxplot(student_data_math['G2'])
plt.grid(True)
plt.show()
plt.boxplot(student_data_math['G3'])
plt.grid(True)
plt.show()
plt.boxplot(student_data_math['absences'])
plt.grid(True)
plt.show()
plt.boxplot([student_data_math['G1'],student_data_math['G2'],student_data_math['G3']])
plt.grid(True)
plt.show()
#変動係数


if __name__ == "__main__":

     sys.exit()

